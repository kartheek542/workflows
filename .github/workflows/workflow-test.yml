name: workflow-test
on: workflow_dispatch
jobs:
  provision-infra:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.CLOUD_REGION }}
    runs-on: ubuntu-latest
    steps:
    - name: Clone terraform scripts
      run: git clone --single-branch --branch dev https://github.com/kartheek542/hostcode-iac.git terraform_src
      
    - name: Generate ssh keys
      run: ssh-keygen -t rsa -b 4096 -N "" -f "aws_terraform_key"
      working-directory: terraform_src

    - name: List the contents of the terraform directory
      run: ls -la
      working-directory: terraform_src

    - name: Archive the private key
      uses: actions/upload-artifact@v4
      with:
        name: ssh-private-key
        path: terraform_src/aws_terraform_key
    
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.10.2"

    - name: Initialize Terraform
      run: terraform init
      working-directory: terraform_src

    - name: Validate Terraform
      run: terraform validate
      working-directory: terraform_src

    - name: Apply Terraform
      run: terraform apply --auto-approve
      working-directory: terraform_src

    - name: Get Terraform Outputs
      run: terraform output -json > terraform-output.json
      working-directory: terraform_src

    - name: Get Nodejs server public IP
      id: nodejs-ip-step
      run: echo "ip=$(cat terraform-output.json | jq -r .nodejs_public_ip.value)" >> "$GITHUB_OUTPUT"
      working-directory: terraform_src

    - name: Archive the terraform output
      uses: actions/upload-artifact@v4
      with:
        name: terraform-output
        path: terraform_src/terraform-output.json

    - name: List the contents of the directory
      run: ls -la
    outputs:
      nodejs_public_ip: ${{ steps.nodejs-ip-step.outputs.ip }}
  
  build-ui-image:
    env:
      VITE_API_URL: "https://${{ needs.provision-infra.outputs.nodejs_public_ip }}/api"
    needs: provision-infra
    runs-on: ubuntu-latest
    steps:
    - name: Clone image source scripts for testers
      run: git clone https://github.com/kartheek542/hostcode-ui.git
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.18.0'

    - name: check jq
      run: jq --version

    - name: listing env variables
      run: env | grep "VITE"

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: kartheek542
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Install dependencies
      run: npm install
      working-directory: hostcode-ui/

    - name: Build source
      run: npm run build
      working-directory: hostcode-ui/

    - name: Build and push hostcode-backend
      run: docker build -t kartheek542/hostcode:ui-1.0 . && docker push kartheek542/hostcode:ui-1.0
      working-directory: hostcode-ui/

  ensure-config:
    env:
      ANSIBLE_HOST_KEY_CHECKING: False
      ANSIBLE_CONFIG: hostcode-ansible.cfg
      AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.CLOUD_REGION }}

      HOSTCODE_DB_HOST: aws-0-ap-south-1.pooler.supabase.com
      HOSTCODE_DB_USER: postgres.yqynvrsxgllrrkgweliv
      HOSTCODE_DB_DATABASE: hostcode
      HOSTCODE_DB_PASSWORD: ${{ secrets.HOSTCODE_DB_PASSWORD }}
      HOSTCODE_DB_PORT: 5432
      JWT_SECRET: ${{ secrets.JWT_SECRET }}


    needs: build-ui-image
    runs-on: ubuntu-latest
    steps:
    - name: Clone ansible scripts
      run: git clone https://github.com/kartheek542/hostcode-ansible.git hostcode-ansible

    - name: Get the private ssh key
      uses: actions/download-artifact@v4
      with:
        name: ssh-private-key
        path: hostcode-ansible

    - name: Get the terraform output
      uses: actions/download-artifact@v4
      with:
        name: terraform-output
        path: hostcode-ansible

    - name: List the public IPs of the instances
      run: cat terraform-output.json
      working-directory: hostcode-ansible

    - name: Generate the inventory file for ansible
      run: ./generate_inventory.py
      working-directory: hostcode-ansible

    - name: Cat the generated inventory file
      run: cat hostcode-inventory.ini
      working-directory: hostcode-ansible

    - name: modify the permissions of the private key
      run: chmod 400 aws_terraform_key
      working-directory: hostcode-ansible

    - name: Ping all hosts
      run: ansible -i hostcode-inventory.ini -m ping all
      working-directory: hostcode-ansible

    - name: Run Ansible Playbook
      run: ansible-playbook -i hostcode-inventory.ini hostcode-setup.yml
      working-directory: hostcode-ansible
